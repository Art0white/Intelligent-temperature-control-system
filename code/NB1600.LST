C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE NB1600
OBJECT MODULE PLACED IN NB1600.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE NB1600.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg52.h> 
   2          #include<intrins.h> 
   3          #include<math.h> 
   4          #include<string.h>
   5          
   6          struct PID { 
   7            unsigned int SetPoint;      // 设定目标 Desired Value 
   8            unsigned int Proportion;    // 比例常数 Proportional Const 
   9            unsigned int Integral;      // 积分常数 Integral Const 
  10            unsigned int Derivative;    // 微分常数 Derivative Const 
  11            unsigned int LastError;     // Error[-1] 
  12            unsigned int PrevError;     // Error[-2] 
  13            unsigned int SumError;      // Sums of Errors 
  14          }; 
  15          /**struct set_temper {
  16            unsigned int stvalue;
  17            unsigned char stflag; 
  18          }set_temper_max={40, 0},set_temper_min{10 , 1};
  19          **/
  20          struct PID spid;    // PID Control Structure 控制结构
  21          unsigned int rout;  // PID Response (Output) 响应输出
  22          unsigned int rin;   // PID Feedback (Input)  反馈输入
  23          unsigned char high_time, low_time,count=0;   //占空比调节参数
  24          #define uchar unsigned char
  25          #define uint unsigned int
  26          #define CLEAR_BIT(x, bit) (x &= ~(1 << bit))    //CLR
  27          #define SET_BIT(x, bit) (x |= (1 << bit))       //SETB
  28          
  29          /**************************************/
  30          /**    定义特殊功能寄存器的位变量    **/
  31          /**************************************/
  32          sbit output=P2^7;
  33          sbit ds=P3^2;
  34          sbit DQ=P3^2;           //ds18b20与单片机连接口
  35          sbit ledred=P2^6;
  36          sbit ledgreen=P2^5;
  37          
  38          uchar set[2]={0};
  39          uchar n,num;
  40          int set_temper_max=40, set_temper_min=10, temper, temp;   //温度变量定义
  41          int temper, temp;
  42          uchar temp1;                    //按键标志
  43          unsigned int s;                 //传递给rin，值为0，代表要求误差为0
  44          float f_temp;                   //转换后的温度
  45          
  46          uint tvalue;         
  47          uchar tflag;                    //温度正负标志
  48          
  49          uchar code LEDzf[]=             //LED显示正负
  50          {
  51            0x00,0x40
  52          };
  53          uchar code LEDData[]=           //LED显示数字0~9
  54          {
  55            0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 2   

  56          };
  57          
  58          uchar t3num;                    //三种温度的标识
  59          
  60          /********************/
  61          /**    延时函数    **/
  62          /********************/
  63          void delay(i)
  64          {
  65   1        uint j;
  66   1        for(i;i>0;i--)
  67   1          for(j=111;j>0;j--);
  68   1      }
  69          
  70          /**********************************/
  71          /**     按照时序操作的初始化     **/
  72          /**********************************/
  73          void init()
  74          { 
  75   1          t3num = 1;
  76   1      }
  77          
  78          /*************************DS1820程序****************************/
  79          
  80          /************************/
  81          /**      延时1微秒     **/
  82          /************************/
  83          void delay_18B20(unsigned int i)
  84          {
  85   1         while(i--);
  86   1      }
  87          
  88          /************************/
  89          /**     ds1820复位     **/
  90          /************************/
  91          void ds1820rst(void)
  92          { 
  93   1        unsigned char x=0;
  94   1        DQ = 1;             //DQ复位
  95   1        delay_18B20(4);     //延时
  96   1        DQ = 0;             //DQ拉低
  97   1        TR0 = 0;
  98   1        delay_18B20(100);   //精确延时大于
  99   1        TR0 = 1;
 100   1        DQ = 1;             //拉高
 101   1        delay_18B20(40); 
 102   1      } 
 103          
 104          /********************/
 105          /**     读数据     **/
 106          /********************/
 107          uchar ds1820rd(void)
 108          { 
 109   1        unsigned char i=0;
 110   1        unsigned char dat = 0;
 111   1        TR0=0;
 112   1        for (i=8;i>0;i--)
 113   1        {   
 114   2          DQ = 0;           //给脉冲信号
 115   2          dat>>=1;
 116   2          DQ = 1;           //给脉冲信号
 117   2          if(DQ)
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 3   

 118   2          dat|=0x80;
 119   2          delay_18B20(10);
 120   2        }
 121   1        return(dat);
 122   1      }
 123          
 124          /********************/
 125          /**     写数据     **/
 126          /********************/
 127          void ds1820wr(uchar wdata)
 128          {
 129   1        unsigned char i=0;
 130   1        TR0=0;
 131   1        for (i=8; i>0; i--)
 132   1        { 
 133   2          DQ = 0;
 134   2          DQ = wdata&0x01;
 135   2          delay_18B20(10);
 136   2          DQ = 1;
 137   2          wdata>>=1;
 138   2        }
 139   1      }
 140          
 141          /**********************/
 142          /**     获取温度     **/
 143          /**********************/
 144          uint get_temper()
 145          {  
 146   1           
 147   1        uchar a,b;
 148   1      
 149   1        ds1820rst();    
 150   1        ds1820wr(0xcc);     //跳过读序列号
 151   1        ds1820wr(0x44);     //启动温度转换
 152   1        ds1820rst();    
 153   1        ds1820wr(0xcc);     //跳过读序列号
 154   1        ds1820wr(0xbe);     //读取温度
 155   1        a=ds1820rd();
 156   1        b=ds1820rd();
 157   1         
 158   1        tvalue=b;
 159   1        tvalue<<=8;
 160   1        tvalue=tvalue|a;    //
 161   1        TR0=1;
 162   1        if(tvalue<0x0fff)
 163   1          tflag=0;
 164   1        else 
 165   1        {
 166   2          tvalue=~tvalue+1;
 167   2          tflag=1;
 168   2        }
 169   1        tvalue=tvalue*(0.625);      //温度值扩大10倍，精确到1位小数
 170   1        temp=tvalue;
 171   1        return temp;
 172   1      }
 173          
 174          /**********************/
 175          /**     显示温度     **/
 176          /**********************/
 177          void show_3temp(int t)
 178          {
 179   1        uchar tflaguse;
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 4   

 180   1        int d0,d1,d2,d3;
 181   1        int dt;
 182   1        if(t3num == 1)
 183   1        {
 184   2          tflaguse = tflag;
 185   2          dt = t;
 186   2        }
 187   1        else
 188   1        {
 189   2          if(t >= 0)
 190   2          {
 191   3            tflaguse = 0;
 192   3            dt = t;
 193   3          }
 194   2          else
 195   2          {
 196   3            tflaguse = 1;
 197   3            dt = -t;
 198   3          }
 199   2        }
 200   1        d0=dt/1000;
 201   1        d1=dt%1000/100;
 202   1        d2=dt%100/10;
 203   1        d3=dt%10;
 204   1          
 205   1        CLEAR_BIT(P2, 3);
 206   1        //P2 = 0xf7;
 207   1        P0 = LEDData[d3];
 208   1        delay(3);
 209   1        SET_BIT(P2, 3);
 210   1          
 211   1        CLEAR_BIT(P2, 2);
 212   1        //P2 = 0xfb;
 213   1        P0 = LEDData[d2];
 214   1        SET_BIT(P0, 7);
 215   1        delay(3);
 216   1        SET_BIT(P2, 2);
 217   1          
 218   1        CLEAR_BIT(P2, 1);
 219   1        //P2 = 0xfd;
 220   1        P0 = LEDData[d1];
 221   1        delay(3);
 222   1        SET_BIT(P2, 1);
 223   1          
 224   1        CLEAR_BIT(P2, 0);
 225   1        //P2 = 0xfe;
 226   1        P0 = LEDzf[tflaguse];
 227   1        delay(4);
 228   1        SET_BIT(P2, 0);
 229   1        
 230   1      }
 231          void dis_temp(int t)
 232          {
 233   1        if(t3num == 1)
 234   1        {
 235   2          CLEAR_BIT(P2, 4);
 236   2          P0 = 0x06;
 237   2          delay(5);
 238   2          SET_BIT(P2, 4);
 239   2          show_3temp(t);
 240   2        }
 241   1        else if(t3num == 2)
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 5   

 242   1        {
 243   2          CLEAR_BIT(P2, 4);
 244   2          P0 = 0x5b;
 245   2          delay(5);
 246   2          SET_BIT(P2, 4);
 247   2          show_3temp(set_temper_max*10);
 248   2        }
 249   1        else if(t3num == 3)
 250   1        {
 251   2          CLEAR_BIT(P2, 4);
 252   2          P0 = 0x4f;
 253   2          delay(5);
 254   2          SET_BIT(P2, 4);
 255   2          show_3temp(set_temper_min*10);
 256   2        }
 257   1      }
 258          
 259          /******************************4×4 键盘******************************/
 260          /************************/
 261          /**        键盘        **/
 262          /************************/
 263          void keyscan()//键盘扫描
 264          {  
 265   1        unsigned char i, num = 16;              //如果让num初始化为0-15之间的数，则没有按下键盘也会显示num的初始值
 266   1        for(i = 0; i < 4; i++)                  //行扫描
 267   1        {
 268   2          P1 = _crol_(0xfe,i);                  //高7位都给高，第一位给低(列全高，第一行给低)(循环左移实现)
 269   2          temp1 = P1;                           //temp采集P1信号(P1口高4位是输口，低4位是输出口)
 270   2          temp1 = temp1 & 0xf0;                 //屏蔽低4位输出信号，采集高4位输入信号
 271   2          if(temp1 != 0xf0)                     //若高四位都为1，则没有被按下；反之有按键被按下
 272   2          {
 273   3            delay(20);                          //延时20毫秒左右，之后重新采集(消抖)
 274   3            temp1 = P1;
 275   3            temp1 = temp1 & 0xf0;
 276   3            if(temp1 != 0xf0)                   //再次判断是否有按键被按下
 277   3            {
 278   4              temp1 = P1;                       //再次采集(避免重新判断扫描的是第几行按键)，准备判断按键号
 279   4              switch(temp1)                     //判断哪个按键被按下
 280   4              {
 281   5                case 0xee:
 282   5                  t3num = 1;
 283   5                  break;
 284   5                case 0xde:
 285   5                  break;
 286   5                case 0xbe:
 287   5                  break;
 288   5                case 0x7e:
 289   5                  break;
 290   5                
 291   5                case 0xed:
 292   5                  t3num = 2;
 293   5                  break;
 294   5                case 0xdd:
 295   5                  if(t3num == 2)
 296   5                    set_temper_max++;
 297   5                  break;
 298   5                case 0xbd:
 299   5                  if(t3num == 2)
 300   5                    set_temper_max--;
 301   5                  break;
 302   5                case 0x7d:
 303   5                  break;
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 6   

 304   5                
 305   5                case 0xeb:
 306   5                  t3num = 3;
 307   5                  break;
 308   5                case 0xdb:
 309   5                  if(t3num == 3)
 310   5                    set_temper_min++;
 311   5                  break;
 312   5                case 0xbb:
 313   5                  if(t3num == 3)
 314   5                    set_temper_min--;
 315   5                  break;
 316   5                case 0x7b:
 317   5                  break;
 318   5                
 319   5                case 0xe7:
 320   5                  break;
 321   5                case 0xd7:
 322   5                  break;
 323   5                case 0xb7:
 324   5                  break;
 325   5                case 0x77:
 326   5                  break;
 327   5                
 328   5                default: 
 329   5                  break;
 330   5              }
 331   4              while((temp1 & 0xf0) != 0xf0)       //判断按键是否弹起
 332   4              {
 333   5                temp1 = P1;
 334   5                temp1 = temp1 & 0xf0;
 335   5              }
 336   4            }
 337   3          }
 338   2        }
 339   1      }
 340          
 341          /************************/
 342          /**     PID初始化      **/
 343          /************************/
 344          void PIDInit (struct PID *pp) 
 345          { 
 346   1        memset (pp,0,sizeof(struct PID));       //用参数0初始化pp
 347   1      } 
 348          
 349          /************************/
 350          /**      PID计算       **/
 351          /************************/
 352          unsigned int PIDCalc(struct PID *pp, unsigned int NextPoint )
 353          { 
 354   1        unsigned int dError,Error; 
 355   1        Error = pp->SetPoint - NextPoint;       //偏差 
 356   1        pp->SumError += Error;                  //积分 
 357   1        dError = pp->LastError - pp->PrevError; //当前微分 
 358   1        pp->PrevError = pp->LastError; 
 359   1        pp->LastError = Error; 
 360   1        return (pp->Proportion * Error          //比例
 361   1        + pp->Integral * pp->SumError           //积分项
 362   1        + pp->Derivative * dError);             //微分项 
 363   1      } 
 364          
 365          /*******************************************************/ 
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 7   

 366          /**               温度比较处理子程序                  **/
 367          /*******************************************************/
 368          
 369          void compare_temper(void) 
 370          { 
 371   1      
 372   1        unsigned char i; 
 373   1        temper = get_temper()/10;
 374   1        if(set_temper_min>temper)                 //设置温度大于当前温度
 375   1        {
 376   2          ledred=0;
 377   2          ledgreen=1;
 378   2          if(set_temper_min-temper>1)             //温度相差1度以上
 379   2          {  
 380   3            high_time=100;
 381   3            low_time=0;
 382   3          } 
 383   2          else                                    //设置温度不大于当前温度
 384   2          { 
 385   3            for(i=0;i<10;i++) 
 386   3            { 
 387   4              get_temper(); 
 388   4              rin = s;                            // Read Input 
 389   4              rout = PIDCalc ( &spid,rin );       //Perform PID Interation 
 390   4            } 
 391   3            if (high_time<=100)   high_time=(unsigned char)(rout/10000); 
 392   3            else  high_time=100; 
 393   3            low_time= (100-high_time); 
 394   3            delay_18B20(498);
 395   3          }
 396   2        }
 397   1        else if(set_temper_max<=temper)           //设置温度不大于当前温度
 398   1        { 
 399   2          ledred=1;
 400   2          ledgreen=0;
 401   2          if(temper-set_temper_max>0)             //温度相差0度以上
 402   2          { 
 403   3            high_time=0; 
 404   3            low_time=100; 
 405   3          } 
 406   2          else 
 407   2          { 
 408   3            for(i=0;i<10;i++) 
 409   3            { 
 410   4              get_temper(); 
 411   4              rin = s; // Read Input 
 412   4              rout = PIDCalc ( &spid,rin ); // Perform PID Interation 
 413   4            } 
 414   3            if (high_time<100) high_time=(unsigned char)(rout/10000); 
 415   3            else  high_time=0; 
 416   3            low_time= (100-high_time);
 417   3          }
 418   2        }
 419   1        else
 420   1        {
 421   2          ledred=1;
 422   2          ledgreen=1;
 423   2        }
 424   1      }
 425          /**void compare_temper(void) 
 426          { 
 427            temper = get_temper()/10;
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 8   

 428            if(set_temper_min>=temper)                //设置温度大于当前温度
 429            {
 430              ledred=0;
 431              ledgreen=1;
 432            } 
 433            else if(set_temper_max<temper)          //设置温度不大于当前温度
 434            { 
 435              ledred=1;
 436              ledgreen=0;
 437            }
 438            else
 439            {
 440              ledred=1;
 441              ledgreen=1;
 442            }
 443          }**/
 444          /***********************************************************************************/ 
 445          /**           T0中断服务子程序，用于控制电平的翻转 ,40us*100=4ms周期              **/
 446          /***********************************************************************************/ 
 447          void serve_T0() interrupt 1 using 1 
 448          { 
 449   1        if(++count<=(high_time))  output=0;
 450   1        else if(count<=100) 
 451   1        { 
 452   2          output=1; 
 453   2        } 
 454   1        else count=0; 
 455   1        TH0=0x2f; 
 456   1        TL0=0x40; 
 457   1      }
 458          
 459          
 460          /***********主函数**********/
 461          void main(void)
 462          {
 463   1        /**unsigned char i;**/
 464   1        init();//LED初始化
 465   1        TMOD=0x01;
 466   1        TH0=0x2f; 
 467   1        TL0=0x40;
 468   1        EA=1;
 469   1        ET0=1;
 470   1        TR0=1;
 471   1        high_time=50; 
 472   1        low_time=50;
 473   1        PIDInit ( &spid );              // Initialize Structure 
 474   1        // Set PID Coefficients
 475   1        spid.Proportion = 10;           //  P 10
 476   1        spid.Integral = 8;              //  I 8
 477   1        spid.Derivative = 6;            //  D 6
 478   1        spid.SetPoint = 100;            // Set PID Setpoint 
 479   1        while(1)
 480   1        {
 481   2          delay(1);
 482   2          keyscan();                    //按键扫描
 483   2          dis_temp(get_temper());       //显示温度值
 484   2          compare_temper();             //比较温度
 485   2        }
 486   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.57.0.0   NB1600                                                            01/07/2022 13:54:39 PAGE 9   

   CODE SIZE        =   1298    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
